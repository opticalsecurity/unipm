# .github/workflows/build-release.yml
name: Build Release

on:
  push:
    branches: [master]
    paths:
      - "package.json"

jobs:
  check_version_change:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(jq -r '.version' package.json)
          echo "Current version: $CURRENT_VERSION"
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
      - name: Get previous version
        id: previous_version
        run: |
          git checkout HEAD^1
          PREVIOUS_VERSION=$(jq -r '.version' package.json)
          echo "Previous version: $PREVIOUS_VERSION"
          echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
      - name: Check if version changed
        id: check
        run: |
          if [ "${{ steps.current_version.outputs.current_version }}" != "${{ steps.previous_version.outputs.previous_version }}" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "Package.json version changed from ${{ steps.previous_version.outputs.previous_version }} to ${{ steps.current_version.outputs.current_version }}"
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "Package.json version did not change."
          fi

  build:
    needs: check_version_change
    if: needs.check_version_change.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          [
            bun-linux-x64,
            bun-linux-arm64,
            bun-darwin-x64,
            bun-darwin-arm64,
            bun-windows-x64,
            bun-linux-x64-musl,
            bun-linux-arm64-musl,
          ]
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install
      - name: Run build script for ${{ matrix.target }}
        run: bun run build --target ${{ matrix.target }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: unipm-${{ matrix.target }}
          path: ./out/
